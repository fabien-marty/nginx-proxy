name: Build and publish Docker images

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 1"
  push:
    branches:
      - healthcheck
    tags:
      - "*.*.*"
    paths-ignore:
      - "test/*"
      - ".gitignore"
      - "docker-compose-separate-containers.yml"
      - "docker-compose.yml"
      - "LICENSE"
      - "Makefile"
      - "*.md"

jobs:
  multiarch-build-debian:
    name: Build and publish Debian image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Retrieve nginx-proxy version
        id: nginx-proxy_version
        run: echo "VERSION=$(git describe --tags)" >> "$GITHUB_OUTPUT"

      - name: Get Docker tags for Debian based image
        id: docker_meta_debian
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/fabien-marty/nginx-proxy
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.authors=Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder, Fabien MARTY
            org.opencontainers.image.version=${{ steps.nginx-proxy_version.outputs.VERSION }}

      - name: Download docker-gen custom release
        uses: robinraju/release-downloader@v1.8
        with:
          repository: "fabien-marty/docker-gen"
          latest: true
          fileName: "docker-gen-linux-amd64-*.tar.gz"
          tarBall: false
          zipBall: false
          extract: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push the Debian based image
        id: docker_build_debian
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          build-args: |
            NGINX_PROXY_VERSION=${{ steps.nginx-proxy_version.outputs.VERSION }}
            DOCKER_GEN_VERSION=healthcheck
          push: true
          tags: ${{ steps.docker_meta_debian.outputs.tags }}
          labels: ${{ steps.docker_meta_debian.outputs.labels }}

      - name: Images digests
        run: echo ${{ steps.docker_build_debian.outputs.digest }}
